[{"C:\\Users\\domen\\Documents\\Concordia\\CO-OP\\Work Term 3\\Shopify\\shopify-challenge-movies\\src\\index.js":"1","C:\\Users\\domen\\Documents\\Concordia\\CO-OP\\Work Term 3\\Shopify\\shopify-challenge-movies\\src\\reportWebVitals.js":"2","C:\\Users\\domen\\Documents\\Concordia\\CO-OP\\Work Term 3\\Shopify\\shopify-challenge-movies\\src\\App.js":"3","C:\\Users\\domen\\Documents\\Concordia\\CO-OP\\Work Term 3\\Shopify\\shopify-challenge-movies\\src\\components\\MovieItem.js":"4","C:\\Users\\domen\\Documents\\Concordia\\CO-OP\\Work Term 3\\Shopify\\shopify-challenge-movies\\src\\components\\SearchBar.js":"5","C:\\Users\\domen\\Documents\\Concordia\\CO-OP\\Work Term 3\\Shopify\\shopify-challenge-movies\\src\\api\\APIUtils.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":3531,"mtime":1609555533047,"results":"10","hashOfConfig":"8"},{"size":1785,"mtime":1609545630757,"results":"11","hashOfConfig":"8"},{"size":365,"mtime":1609545871161,"results":"12","hashOfConfig":"8"},{"size":232,"mtime":1609536405164,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"cfd0wn",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\Users\\domen\\Documents\\Concordia\\CO-OP\\Work Term 3\\Shopify\\shopify-challenge-movies\\src\\index.js",[],["28","29"],"C:\\Users\\domen\\Documents\\Concordia\\CO-OP\\Work Term 3\\Shopify\\shopify-challenge-movies\\src\\reportWebVitals.js",[],"C:\\Users\\domen\\Documents\\Concordia\\CO-OP\\Work Term 3\\Shopify\\shopify-challenge-movies\\src\\App.js",["30"],"import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport MovieItem from \"./components/MovieItem\";\nimport SearchBar from \"./components/SearchBar\";\nimport { containsMovie } from \"./api/APIUtils.js\";\n\nfunction App() {\n  const initialNominations = JSON.parse(\n    window.localStorage.getItem(\"nominatedList\")\n  );\n  const [searchList, setSearchList] = useState([]); //List of movies resulting from the search\n  const [searchValue, setSearchValue] = useState(\"\"); //Text input of the search bar. e.g \"The Lord of the Rings\"\n  const [nominatedList, setNominatedList] = useState(initialNominations || []); //List of nominated movies\n\n  const getMovies = (search) => {\n    if (searchValue) {\n      fetch(`http://www.omdbapi.com/?s=${search}&apikey=45ae6804&type=movie`)\n        .then((res) => res.json())\n        .then((result) => {\n          console.log(result);\n          setSearchList(result.Search);\n        });\n    }\n  };\n\n  const updateSearchValue = (newValue) => {\n    setSearchValue(newValue);\n  };\n\n  const nominateMovie = (movie) => {\n    console.log(\"Nominating a movie!\");\n    console.log(movie);\n    if (nominatedList.length < 5 && !containsMovie(movie, nominatedList)) {\n      const newNominatedList = [...nominatedList, movie]; //append the new movie to the list of nominated movies\n      setNominatedList(newNominatedList);\n    }\n  };\n\n  //We use the imdbID as the unique index\n  const removeMovie = (movie) => {\n    const { imdbID } = movie;\n    const newNominatedList = nominatedList.filter(\n      (movie) => !(movie.imdbID === imdbID)\n    );\n    setNominatedList(newNominatedList);\n    console.log(\"Removing a movie from the list of nominations.\");\n    console.log(movie);\n  };\n\n  useEffect(() => {\n    getMovies(searchValue);\n  }, [searchValue]);\n\n  useEffect(() => {\n    window.localStorage.setItem(\"nominatedList\", JSON.stringify(nominatedList));\n  }, [nominatedList]);\n\n  return (\n    <div className=\"App\">\n      {nominatedList.length === 5 ? (\n        <div className=\"bannerContainer\">\n          <p className=\"banner\">5 Nominations Selected! üèÜ</p>\n        </div>\n      ) : (\n        <></>\n      )}\n\n      <div className=\"AppTitle\">\n        <h1>The Shoppies</h1>\n      </div>\n      <div>\n        <SearchBar handleChange={updateSearchValue} />\n      </div>\n      <div className=\"searchedMovies\">\n        <h2 className=\"movieListTitle\">Search Results</h2>\n        {searchList && searchList.length ? (\n          <div className=\"searchList\">\n            {searchList.map((movie) => {\n              return (\n                <MovieItem\n                  {...movie}\n                  key={movie.imdbID}\n                  buttonType=\"Nominate\"\n                  buttonHandler={nominateMovie}\n                  nominatedList={nominatedList}\n                />\n              );\n            })}\n          </div>\n        ) : (\n          <></>\n        )}\n      </div>\n      <div className=\"nominatedMovies\">\n        <h2 className=\"movieListTitle\">\n          Nominated Movies ({nominatedList.length}/5)\n        </h2>\n        {nominatedList && nominatedList.length ? (\n          <div className=\"searchList\">\n            {nominatedList.map((movie) => {\n              return (\n                <MovieItem\n                  {...movie}\n                  key={movie.imdbID}\n                  buttonType=\"Remove\"\n                  buttonHandler={removeMovie}\n                />\n              );\n            })}\n          </div>\n        ) : (\n          <></>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\domen\\Documents\\Concordia\\CO-OP\\Work Term 3\\Shopify\\shopify-challenge-movies\\src\\components\\MovieItem.js",[],"C:\\Users\\domen\\Documents\\Concordia\\CO-OP\\Work Term 3\\Shopify\\shopify-challenge-movies\\src\\components\\SearchBar.js",[],"C:\\Users\\domen\\Documents\\Concordia\\CO-OP\\Work Term 3\\Shopify\\shopify-challenge-movies\\src\\api\\APIUtils.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":52,"column":6,"nodeType":"37","endLine":52,"endColumn":19,"suggestions":"38"},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMovies'. Either include it or remove the dependency array.","ArrayExpression",["41"],"no-global-assign","no-unsafe-negation",{"desc":"42","fix":"43"},"Update the dependencies array to be: [getMovies, searchValue]",{"range":"44","text":"45"},[1758,1771],"[getMovies, searchValue]"]