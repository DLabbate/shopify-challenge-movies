<<<<<<< Updated upstream
[{"C:\\Users\\domen\\Documents\\Concordia\\CO-OP\\Work Term 3\\Shopify\\shopify-challenge-movies\\src\\index.js":"1","C:\\Users\\domen\\Documents\\Concordia\\CO-OP\\Work Term 3\\Shopify\\shopify-challenge-movies\\src\\reportWebVitals.js":"2","C:\\Users\\domen\\Documents\\Concordia\\CO-OP\\Work Term 3\\Shopify\\shopify-challenge-movies\\src\\App.js":"3","C:\\Users\\domen\\Documents\\Concordia\\CO-OP\\Work Term 3\\Shopify\\shopify-challenge-movies\\src\\components\\MovieItem.js":"4","C:\\Users\\domen\\Documents\\Concordia\\CO-OP\\Work Term 3\\Shopify\\shopify-challenge-movies\\src\\components\\SearchBar.js":"5","C:\\Users\\domen\\Documents\\Concordia\\CO-OP\\Work Term 3\\Shopify\\shopify-challenge-movies\\src\\api\\APIUtils.js":"6"},{"size":517,"mtime":1609799819698,"results":"7","hashOfConfig":"8"},{"size":375,"mtime":1609799819699,"results":"9","hashOfConfig":"8"},{"size":4360,"mtime":1609799819691,"results":"10","hashOfConfig":"8"},{"size":3995,"mtime":1609799819695,"results":"11","hashOfConfig":"8"},{"size":678,"mtime":1609799819697,"results":"12","hashOfConfig":"8"},{"size":1842,"mtime":1609804569290,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"cfd0wn",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\domen\\Documents\\Concordia\\CO-OP\\Work Term 3\\Shopify\\shopify-challenge-movies\\src\\index.js",[],["28","29"],"C:\\Users\\domen\\Documents\\Concordia\\CO-OP\\Work Term 3\\Shopify\\shopify-challenge-movies\\src\\reportWebVitals.js",[],"C:\\Users\\domen\\Documents\\Concordia\\CO-OP\\Work Term 3\\Shopify\\shopify-challenge-movies\\src\\App.js",[],"C:\\Users\\domen\\Documents\\Concordia\\CO-OP\\Work Term 3\\Shopify\\shopify-challenge-movies\\src\\components\\MovieItem.js",["30"],"/**\r\n * @file This component is used for displaying a movie item, consiting of the movie poster, year and title.\r\n * @author Domenic Labbate\r\n */\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./MovieItem.css\";\r\nimport { containsMovie, getMovieInfo } from \"../api/APIUtils.js\";\r\n\r\n/**\r\n *\r\n * @param {string} Title - the title of a movie (given by OMDB API)\r\n * @param {string} Year - the release year of a movie (given by OMDB API)\r\n * @param {string} imdbID - the imdb identification key (given by OMDB API)\r\n * @param {string} Type - \"movie\". Note that we ONLY search for movies in our call to the OMDB API (no tv shows, etc.)\r\n * @param {string} Poster - url to the movie poster. If it does not exist, will return \"N/A\" (given by OMDB API)\r\n * @param {string} buttonType - This can be either \"Nominate\" or \"Remove\"\r\n * @param {Function} buttonHandler - Function that specifies what action the button should take\r\n * @param {Array} nominatedList - The list of movies the user has currently nominated\r\n */\r\nconst MovieItem = ({\r\n  Title,\r\n  Year,\r\n  imdbID,\r\n  Type,\r\n  Poster,\r\n  buttonType,\r\n  buttonHandler,\r\n  nominatedList,\r\n}) => {\r\n  const [detailedInfo, setDetailedInfo] = useState({});\r\n\r\n  /**\r\n   * This method checks if the given movie item has a poster, if not it will return a default image.\r\n   * @param {string} Poster - link to movie poster. Value will be \"N/A\" if it does not exist.\r\n   */\r\n  const getImageURL = (Poster) => {\r\n    if (Poster === \"N/A\") {\r\n      return \"https://cdn4.iconfinder.com/data/icons/basic-flat-ui-extra-set-200-item/76/ui_ux_minimalist_button_video_film_roll-512.png\";\r\n    } else {\r\n      return Poster;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * This method sets the buttonHandler of the MovieItem, depending on whether \"Nominate\" or \"Remove\".\r\n   * This is done so that the component can be reused for both the list of search results, along with the list of nominated movies.\r\n   */\r\n  const nominateOrRemove = () => {\r\n    const movieObject = {\r\n      Title: Title,\r\n      Year: Year,\r\n      imdbID: imdbID,\r\n      Type: Type,\r\n      Poster: Poster,\r\n    };\r\n    if (buttonType === \"Nominate\") {\r\n      console.log(movieObject);\r\n      buttonHandler(movieObject);\r\n    } else if (buttonType === \"Remove\") {\r\n      buttonHandler(movieObject);\r\n    } else {\r\n      console.log(\"Invalid buttonType for MovieItem\");\r\n    }\r\n  };\r\n\r\n  /**\r\n   * This method checks if a given movie has already been nominated. If this is the case, the \"Nominate\" button (for this specific MovieItem) will be disabled.\r\n   * Note however that the \"Remove\" button is never disabled. We always want the user to be able to remove a movie from the nomination list.\r\n   */\r\n  const isButtonDisabled = () => {\r\n    const movieObject = {\r\n      Title: Title,\r\n      Year: Year,\r\n      imdbID: imdbID,\r\n      Type: Type,\r\n      Poster: Poster,\r\n    };\r\n    if (\r\n      buttonType === \"Nominate\" &&\r\n      containsMovie(movieObject, nominatedList)\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * Calls the OMDB API to retrieve detailed info (plot) of the movie.\r\n   * We specify [], so it will only execute once\r\n   */\r\n  useEffect(() => {\r\n    getMovieInfo(imdbID, setDetailedInfo);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"movieItemContainer\">\r\n      <div className=\"imageContainer\">\r\n        <img className=\"movieImage\" src={getImageURL(Poster)} alt=\"\" />\r\n        <div className=\"overlay\">\r\n          <p className=\"detailedInfo\">{detailedInfo.Plot}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"movieInformation\">\r\n        <h3 className=\"movieTitle\">\r\n          {Title}\r\n          <span> ({Year})</span>\r\n        </h3>\r\n      </div>\r\n      <div className=\"buttonContainer\">\r\n        <button\r\n          className=\"movieButton\"\r\n          onClick={nominateOrRemove}\r\n          disabled={isButtonDisabled()}\r\n        >\r\n          {buttonType}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieItem;\r\n","C:\\Users\\domen\\Documents\\Concordia\\CO-OP\\Work Term 3\\Shopify\\shopify-challenge-movies\\src\\components\\SearchBar.js",[],"C:\\Users\\domen\\Documents\\Concordia\\CO-OP\\Work Term 3\\Shopify\\shopify-challenge-movies\\src\\api\\APIUtils.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":94,"column":6,"nodeType":"37","endLine":94,"endColumn":8,"suggestions":"38"},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'imdbID'. Either include it or remove the dependency array.","ArrayExpression",["41"],"no-global-assign","no-unsafe-negation",{"desc":"42","fix":"43"},"Update the dependencies array to be: [imdbID]",{"range":"44","text":"45"},[3238,3240],"[imdbID]"]
=======
[{"C:\\Users\\domen\\Documents\\Concordia\\CO-OP\\Work Term 3\\Shopify\\shopify-challenge-movies\\src\\index.js":"1","C:\\Users\\domen\\Documents\\Concordia\\CO-OP\\Work Term 3\\Shopify\\shopify-challenge-movies\\src\\reportWebVitals.js":"2","C:\\Users\\domen\\Documents\\Concordia\\CO-OP\\Work Term 3\\Shopify\\shopify-challenge-movies\\src\\App.js":"3","C:\\Users\\domen\\Documents\\Concordia\\CO-OP\\Work Term 3\\Shopify\\shopify-challenge-movies\\src\\components\\MovieItem.js":"4","C:\\Users\\domen\\Documents\\Concordia\\CO-OP\\Work Term 3\\Shopify\\shopify-challenge-movies\\src\\components\\SearchBar.js":"5","C:\\Users\\domen\\Documents\\Concordia\\CO-OP\\Work Term 3\\Shopify\\shopify-challenge-movies\\src\\api\\APIUtils.js":"6"},{"size":517,"mtime":1609799819698,"results":"7","hashOfConfig":"8"},{"size":375,"mtime":1609799819699,"results":"9","hashOfConfig":"8"},{"size":4360,"mtime":1609799819691,"results":"10","hashOfConfig":"8"},{"size":3995,"mtime":1609799819695,"results":"11","hashOfConfig":"8"},{"size":678,"mtime":1609799819697,"results":"12","hashOfConfig":"8"},{"size":1840,"mtime":1609804700010,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"cfd0wn",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\domen\\Documents\\Concordia\\CO-OP\\Work Term 3\\Shopify\\shopify-challenge-movies\\src\\index.js",[],["28","29"],"C:\\Users\\domen\\Documents\\Concordia\\CO-OP\\Work Term 3\\Shopify\\shopify-challenge-movies\\src\\reportWebVitals.js",[],"C:\\Users\\domen\\Documents\\Concordia\\CO-OP\\Work Term 3\\Shopify\\shopify-challenge-movies\\src\\App.js",[],"C:\\Users\\domen\\Documents\\Concordia\\CO-OP\\Work Term 3\\Shopify\\shopify-challenge-movies\\src\\components\\MovieItem.js",["30"],"/**\r\n * @file This component is used for displaying a movie item, consiting of the movie poster, year and title.\r\n * @author Domenic Labbate\r\n */\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./MovieItem.css\";\r\nimport { containsMovie, getMovieInfo } from \"../api/APIUtils.js\";\r\n\r\n/**\r\n *\r\n * @param {string} Title - the title of a movie (given by OMDB API)\r\n * @param {string} Year - the release year of a movie (given by OMDB API)\r\n * @param {string} imdbID - the imdb identification key (given by OMDB API)\r\n * @param {string} Type - \"movie\". Note that we ONLY search for movies in our call to the OMDB API (no tv shows, etc.)\r\n * @param {string} Poster - url to the movie poster. If it does not exist, will return \"N/A\" (given by OMDB API)\r\n * @param {string} buttonType - This can be either \"Nominate\" or \"Remove\"\r\n * @param {Function} buttonHandler - Function that specifies what action the button should take\r\n * @param {Array} nominatedList - The list of movies the user has currently nominated\r\n */\r\nconst MovieItem = ({\r\n  Title,\r\n  Year,\r\n  imdbID,\r\n  Type,\r\n  Poster,\r\n  buttonType,\r\n  buttonHandler,\r\n  nominatedList,\r\n}) => {\r\n  const [detailedInfo, setDetailedInfo] = useState({});\r\n\r\n  /**\r\n   * This method checks if the given movie item has a poster, if not it will return a default image.\r\n   * @param {string} Poster - link to movie poster. Value will be \"N/A\" if it does not exist.\r\n   */\r\n  const getImageURL = (Poster) => {\r\n    if (Poster === \"N/A\") {\r\n      return \"https://cdn4.iconfinder.com/data/icons/basic-flat-ui-extra-set-200-item/76/ui_ux_minimalist_button_video_film_roll-512.png\";\r\n    } else {\r\n      return Poster;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * This method sets the buttonHandler of the MovieItem, depending on whether \"Nominate\" or \"Remove\".\r\n   * This is done so that the component can be reused for both the list of search results, along with the list of nominated movies.\r\n   */\r\n  const nominateOrRemove = () => {\r\n    const movieObject = {\r\n      Title: Title,\r\n      Year: Year,\r\n      imdbID: imdbID,\r\n      Type: Type,\r\n      Poster: Poster,\r\n    };\r\n    if (buttonType === \"Nominate\") {\r\n      console.log(movieObject);\r\n      buttonHandler(movieObject);\r\n    } else if (buttonType === \"Remove\") {\r\n      buttonHandler(movieObject);\r\n    } else {\r\n      console.log(\"Invalid buttonType for MovieItem\");\r\n    }\r\n  };\r\n\r\n  /**\r\n   * This method checks if a given movie has already been nominated. If this is the case, the \"Nominate\" button (for this specific MovieItem) will be disabled.\r\n   * Note however that the \"Remove\" button is never disabled. We always want the user to be able to remove a movie from the nomination list.\r\n   */\r\n  const isButtonDisabled = () => {\r\n    const movieObject = {\r\n      Title: Title,\r\n      Year: Year,\r\n      imdbID: imdbID,\r\n      Type: Type,\r\n      Poster: Poster,\r\n    };\r\n    if (\r\n      buttonType === \"Nominate\" &&\r\n      containsMovie(movieObject, nominatedList)\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * Calls the OMDB API to retrieve detailed info (plot) of the movie.\r\n   * We specify [], so it will only execute once\r\n   */\r\n  useEffect(() => {\r\n    getMovieInfo(imdbID, setDetailedInfo);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"movieItemContainer\">\r\n      <div className=\"imageContainer\">\r\n        <img className=\"movieImage\" src={getImageURL(Poster)} alt=\"\" />\r\n        <div className=\"overlay\">\r\n          <p className=\"detailedInfo\">{detailedInfo.Plot}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"movieInformation\">\r\n        <h3 className=\"movieTitle\">\r\n          {Title}\r\n          <span> ({Year})</span>\r\n        </h3>\r\n      </div>\r\n      <div className=\"buttonContainer\">\r\n        <button\r\n          className=\"movieButton\"\r\n          onClick={nominateOrRemove}\r\n          disabled={isButtonDisabled()}\r\n        >\r\n          {buttonType}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieItem;\r\n","C:\\Users\\domen\\Documents\\Concordia\\CO-OP\\Work Term 3\\Shopify\\shopify-challenge-movies\\src\\components\\SearchBar.js",[],"C:\\Users\\domen\\Documents\\Concordia\\CO-OP\\Work Term 3\\Shopify\\shopify-challenge-movies\\src\\api\\APIUtils.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":94,"column":6,"nodeType":"37","endLine":94,"endColumn":8,"suggestions":"38"},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'imdbID'. Either include it or remove the dependency array.","ArrayExpression",["41"],"no-global-assign","no-unsafe-negation",{"desc":"42","fix":"43"},"Update the dependencies array to be: [imdbID]",{"range":"44","text":"45"},[3238,3240],"[imdbID]"]
>>>>>>> Stashed changes
