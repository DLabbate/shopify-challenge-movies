[{"C:\\Users\\domen\\Documents\\Concordia\\CO-OP\\Work Term 3\\Shopify\\shopify-challenge-movies\\src\\index.js":"1","C:\\Users\\domen\\Documents\\Concordia\\CO-OP\\Work Term 3\\Shopify\\shopify-challenge-movies\\src\\reportWebVitals.js":"2","C:\\Users\\domen\\Documents\\Concordia\\CO-OP\\Work Term 3\\Shopify\\shopify-challenge-movies\\src\\App.js":"3","C:\\Users\\domen\\Documents\\Concordia\\CO-OP\\Work Term 3\\Shopify\\shopify-challenge-movies\\src\\components\\MovieItem.js":"4","C:\\Users\\domen\\Documents\\Concordia\\CO-OP\\Work Term 3\\Shopify\\shopify-challenge-movies\\src\\components\\SearchBar.js":"5","C:\\Users\\domen\\Documents\\Concordia\\CO-OP\\Work Term 3\\Shopify\\shopify-challenge-movies\\src\\api\\APIUtils.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":4104,"mtime":1609576375803,"results":"10","hashOfConfig":"8"},{"size":2338,"mtime":1609576370598,"results":"11","hashOfConfig":"8"},{"size":365,"mtime":1609545871161,"results":"12","hashOfConfig":"8"},{"size":232,"mtime":1609536405164,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"cfd0wn",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\Users\\domen\\Documents\\Concordia\\CO-OP\\Work Term 3\\Shopify\\shopify-challenge-movies\\src\\index.js",[],["30","31"],"C:\\Users\\domen\\Documents\\Concordia\\CO-OP\\Work Term 3\\Shopify\\shopify-challenge-movies\\src\\reportWebVitals.js",[],"C:\\Users\\domen\\Documents\\Concordia\\CO-OP\\Work Term 3\\Shopify\\shopify-challenge-movies\\src\\App.js",["32"],"import { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport MovieItem from \"./components/MovieItem\";\r\nimport SearchBar from \"./components/SearchBar\";\r\nimport { containsMovie } from \"./api/APIUtils.js\";\r\n\r\nfunction App() {\r\n  const initialNominations = JSON.parse(\r\n    window.localStorage.getItem(\"nominatedList\")\r\n  );\r\n  const [searchList, setSearchList] = useState([]); //List of movies resulting from the search\r\n  const [searchValue, setSearchValue] = useState(\"\"); //Text input of the search bar. e.g \"The Lord of the Rings\"\r\n  const [nominatedList, setNominatedList] = useState(initialNominations || []); //List of nominated movies\r\n\r\n  const getMovies = (search) => {\r\n    if (searchValue) {\r\n      fetch(`http://www.omdbapi.com/?s=${search}&apikey=45ae6804&type=movie`)\r\n        .then((res) => res.json())\r\n        .then((result) => {\r\n          console.log(result);\r\n          setSearchList(result.Search);\r\n        });\r\n    }\r\n  };\r\n\r\n  const updateSearchValue = (newValue) => {\r\n    setSearchValue(newValue);\r\n  };\r\n\r\n  const nominateMovie = (movie) => {\r\n    console.log(\"Nominating a movie!\");\r\n    console.log(movie);\r\n    if (nominatedList.length < 5 && !containsMovie(movie, nominatedList)) {\r\n      const newNominatedList = [...nominatedList, movie]; //append the new movie to the list of nominated movies\r\n      setNominatedList(newNominatedList);\r\n    }\r\n  };\r\n\r\n  //We use the imdbID as the unique index\r\n  const removeMovie = (movie) => {\r\n    const { imdbID } = movie;\r\n    const newNominatedList = nominatedList.filter(\r\n      (movie) => !(movie.imdbID === imdbID)\r\n    );\r\n    setNominatedList(newNominatedList);\r\n    console.log(\"Removing a movie from the list of nominations.\");\r\n    console.log(movie);\r\n  };\r\n\r\n  // const getDetailedMovieInformation = () => {\r\n  //   let i;\r\n  //   for (i = 0; i < searchValue.length; i++) {\r\n  //     console.log(i.imdbID);\r\n  //     fetch(`http://www.omdbapi.com/?i=${i.imdbID}&apikey=45ae6804`)\r\n  //       .then((res) => res.json())\r\n  //       .then((result) => {\r\n  //         console.log(result);\r\n  //         if (result) {\r\n  //         }\r\n  //         return result;\r\n  //       });\r\n  //   }\r\n  // };\r\n\r\n  useEffect(() => {\r\n    getMovies(searchValue);\r\n  }, [searchValue]);\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(\"nominatedList\", JSON.stringify(nominatedList));\r\n  }, [nominatedList]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {nominatedList.length === 5 ? (\r\n        <div className=\"bannerContainer\">\r\n          <p className=\"banner\">5 Nominations Selected! üèÜ</p>\r\n        </div>\r\n      ) : (\r\n        <></>\r\n      )}\r\n\r\n      <div className=\"AppTitle\">\r\n        <h1>The Shoppies</h1>\r\n      </div>\r\n      <div>\r\n        <SearchBar handleChange={updateSearchValue} />\r\n      </div>\r\n      <div className=\"searchedMovies\">\r\n        <h2 className=\"sectionTitle\">Search Results for \"{searchValue}\"</h2>\r\n        {searchList && searchList.length ? (\r\n          <div className=\"searchList\">\r\n            {searchList.map((movie) => {\r\n              return (\r\n                <MovieItem\r\n                  {...movie}\r\n                  key={movie.imdbID}\r\n                  buttonType=\"Nominate\"\r\n                  buttonHandler={nominateMovie}\r\n                  nominatedList={nominatedList}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n      <div className=\"nominatedMovies\">\r\n        <h2 className=\"sectionTitle\">\r\n          Nominated Movies ({nominatedList.length}/5)\r\n        </h2>\r\n        {nominatedList && nominatedList.length ? (\r\n          <div className=\"searchList\">\r\n            {nominatedList.map((movie) => {\r\n              return (\r\n                <MovieItem\r\n                  {...movie}\r\n                  key={movie.imdbID}\r\n                  buttonType=\"Remove\"\r\n                  buttonHandler={removeMovie}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\domen\\Documents\\Concordia\\CO-OP\\Work Term 3\\Shopify\\shopify-challenge-movies\\src\\components\\MovieItem.js",["33"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./MovieItem.css\";\r\nimport { containsMovie } from \"../api/APIUtils.js\";\r\n\r\nconst MovieItem = ({\r\n  Title,\r\n  Year,\r\n  imdbID,\r\n  Type,\r\n  Poster,\r\n  buttonType,\r\n  buttonHandler,\r\n  nominatedList,\r\n}) => {\r\n  const [detailedInfo, setDetailedInfo] = useState({});\r\n\r\n  const getImageURL = (Poster) => {\r\n    if (Poster === \"N/A\") {\r\n      return \"https://cdn4.iconfinder.com/data/icons/basic-flat-ui-extra-set-200-item/76/ui_ux_minimalist_button_video_film_roll-512.png\";\r\n    } else {\r\n      return Poster;\r\n    }\r\n  };\r\n\r\n  const nominateOrRemove = () => {\r\n    const movieObject = {\r\n      Title: Title,\r\n      Year: Year,\r\n      imdbID: imdbID,\r\n      Type: Type,\r\n      Poster: Poster,\r\n    };\r\n    if (buttonType === \"Nominate\") {\r\n      console.log(movieObject);\r\n      buttonHandler(movieObject);\r\n    } else if (buttonType === \"Remove\") {\r\n      buttonHandler(movieObject);\r\n    }\r\n  };\r\n\r\n  const isButtonDisabled = () => {\r\n    const movieObject = {\r\n      Title: Title,\r\n      Year: Year,\r\n      imdbID: imdbID,\r\n      Type: Type,\r\n      Poster: Poster,\r\n    };\r\n    if (\r\n      buttonType === \"Nominate\" &&\r\n      containsMovie(movieObject, nominatedList)\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const getMovieInfo = () => {\r\n    fetch(`http://www.omdbapi.com/?i=${imdbID}&apikey=45ae6804`)\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        console.log(result);\r\n        setDetailedInfo(result);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMovieInfo();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"movieItemContainer\">\r\n      <div className=\"imageContainer\">\r\n        <img className=\"movieImage\" src={getImageURL(Poster)} alt=\"\" />\r\n        <div className=\"overlay\">\r\n          <p className=\"detailedInfo\">{detailedInfo.Plot}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"movieInformation\">\r\n        <h3 className=\"movieTitle\">\r\n          {Title}\r\n          <span> ({Year})</span>\r\n        </h3>\r\n      </div>\r\n      <div className=\"buttonContainer\">\r\n        <button\r\n          className=\"movieButton\"\r\n          onClick={nominateOrRemove}\r\n          disabled={isButtonDisabled()}\r\n        >\r\n          {buttonType}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieItem;\r\n","C:\\Users\\domen\\Documents\\Concordia\\CO-OP\\Work Term 3\\Shopify\\shopify-challenge-movies\\src\\components\\SearchBar.js",[],["34","35"],"C:\\Users\\domen\\Documents\\Concordia\\CO-OP\\Work Term 3\\Shopify\\shopify-challenge-movies\\src\\api\\APIUtils.js",[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":67,"column":6,"nodeType":"42","endLine":67,"endColumn":19,"suggestions":"43"},{"ruleId":"40","severity":1,"message":"44","line":69,"column":6,"nodeType":"42","endLine":69,"endColumn":8,"suggestions":"45"},{"ruleId":"36","replacedBy":"46"},{"ruleId":"38","replacedBy":"47"},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMovies'. Either include it or remove the dependency array.","ArrayExpression",["50"],"React Hook useEffect has a missing dependency: 'getMovieInfo'. Either include it or remove the dependency array.",["51"],["48"],["49"],"no-global-assign","no-unsafe-negation",{"desc":"52","fix":"53"},{"desc":"54","fix":"55"},"Update the dependencies array to be: [getMovies, searchValue]",{"range":"56","text":"57"},"Update the dependencies array to be: [getMovieInfo]",{"range":"58","text":"59"},[2247,2260],"[getMovies, searchValue]",[1581,1583],"[getMovieInfo]"]